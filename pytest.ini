[pytest]
markers =
    vidrial: marks tests that use vidrial
    triton: marks tests that use triton
    reference: marks tests that use reference implementation
    cuda: marks tests that use cuda
    attention: marks tests for attention
    update_state: marks tests for update state
    query_state: marks tests for query state
    discumsum: marks tests for discumsum
    discumsum_triton: marks tests for discumsum triton
    attention_reference: marks tests for attention reference
    attention_triton: marks tests for attention triton
    attention_vidrial: marks tests for attention vidrial
    update_state_reference: marks tests for update state reference
    query_state_reference: marks tests for query state reference
    update_state_vidrial: marks tests for update state with vidrial
    query_state_vidrial: marks tests for query state with vidrial
    update_state_triton: marks tests for update state with triton
    query_state_triton: marks tests for query state with triton
    update_state_vidrial_reference: marks tests for update state with vidrial reference
    query_state_vidrial_reference: marks tests for query state with vidrial reference
    discumsum_reference: marks tests for discumsum reference
    discumsum_cuda: marks tests for discumsum cuda
    vidrial_reference: marks tests for vidrial reference
    power_retention: marks tests for power full
    full: marks tests for full
    power_retention_reference: marks tests for power full reference
    power_retention_triton: marks tests for power full triton
    power_retention_vidrial: marks tests for power full vidrial
    power_retention_vidrial_reference: marks tests for power full vidrial reference
    power_retention_vidrial_gqa: marks tests for power full vidrial gqa
    power_retention_vidrial_gqa_reference: marks tests for power full vidrial gqa reference
    power_retention_vidrial_gqa_inference_reference: marks tests for power full vidrial gqa inference reference
    power_retention_vidrial_gqa_inference: marks tests for power full vidrial gqa inference
    attention_triton_inference: marks tests for attention triton inference
    update_state_vidrial_fused: marks tests for update state vidrial fused
    query_state_vidrial_fused_inference: marks tests for query state vidrial fused inference
    query_state_vidrial_fused: marks tests for query state vidrial fused
    vidrial_fused: marks tests for vidrial fused
    power_retention_vidrial_inference_reference: marks tests for power full vidrial inference reference
    power_retention_vidrial_inference: marks tests for power full vidrial inference
    query_state_triton_inference: marks tests for query state triton inference
    power_retention_triton_inference: marks tests for power full triton inference
    power_retention_triton_gqa_reference: marks tests for power full triton gqa reference
    power_retention_triton_gqa: marks tests for power full triton gqa
    power_retention_triton_gqa_inference_reference: marks tests for power full triton gqa inference reference
    power_retention_triton_gqa_inference: marks tests for power full triton gqa inference
addopts = --import-mode=importlib --pyargs
testpaths = perf/tests
python_files = *.py
python_functions = test_*
pythonpath = .
